/* eslint-disable max-len */
// Core
import React, { FC } from 'react';

// Bus
// import {} from '../../../bus/'

// Styles
import * as S from './styles';

// Types
type PropTypes = {
    /* type props here */
}

export const ReactLesson3: FC<PropTypes> = () => {
    return (
        <S.Container>
            <h1>Эти выполненые задания находяться в 1 уроке по React</h1>
            <div>
                <h1>
                    Домашнее задание No1
                </h1>
                <p>
                    В этом задании нужно улучшить приложение созданное преподавателем на уроке. Для этого нужно добавить лоадер который будет отображаться во время загрузки новостей из
                    API.
                </p>
                <p>
                    Лоадером будет фраза Загрузка данных .
                </p>
                <p>
                    Обратите внимание!
                </p>
                <p>
                    Лоадер должен отображатся только во время запроса
                </p>
                <p>
                    Необходимо чтобы хук useApiLoader возвращал переменную isFetching со
                    значением true если идет загрузка и false если загрузка не идет
                </p>
                <p>
                    Необходимо внутри компонента добавить логику отображения лоадера. Лоадер будет
                    ориентироватся на переменную isFetching которую возвращает хук useApiLoader
                </p>
            </div>
            <div>
                <h1>
                    Домашнее задание No2
                </h1>
                <p>
                    В этом задании нужно улучшить приложение созданное преподавателем на уроке.
                </p>
                <p>
                    Для
                    этого нужно добавить обработку серверных ошибок.
                </p>
                <p>
                    Для реализации этого задания необходимо чтобы хук useApiLoader возвращал булевую
                    переменную isServerError . В том случае если isServerError возвращает false ошибки
                    нет, а если true то это значит что сервер вернул ошибку.
                </p>
                <p>
                    В компоненте News необходимо вывести на экране текст Сервер не отвечает
                    Обратите внимание!
                </p>
                Рендерить список новостей необходимо только в том случае если переменная
                isServerError возвращает false
            </div>
            <div>
                <h1>
                    Домашнее задание No3
                </h1>
                <p>
                    В этом задании нужно улучшить приложение созданное преподавателем на уроке. Для
                    этого нужно добавить обработку клиентских ошибок.
                </p>
                Для реализации этого задания необходимо чтобы хук useApiLoader возвращал булевую
                переменную isClientError . В том случае если isClientError возвращает false ошибки
                нет, а если true то это значит что сервер вернул ошибку и причина этой ошибки в запросе
                клиента.
                <p>
                    В компоненте News необходимо вывести на экране текст Неправильный запрос
                    Обратите внимание!
                </p>
                Рендерить список новостей необходимо только в том случае если переменная
                isClientError возвращает false
            </div>
        </S.Container>
    );
};
